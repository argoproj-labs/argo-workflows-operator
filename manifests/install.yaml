apiVersion: v1
kind: ServiceAccount
metadata:
  name: operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-workflows-operator
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  - cronworkflows
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - get
  - patch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - get
  - patch
  - escalate
  - bind
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-workflows-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-workflows-operator
subjects:
- kind: ServiceAccount
  name: operator
  namespace: argo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: operator
spec:
  selector:
    matchLabels:
      app: operator
  template:
    metadata:
      labels:
        app: operator
    spec:
      containers:
      - image: argoproj/argo-workflows-operator:latest
        imagePullPolicy: IfNotPresent
        name: operator
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      securityContext:
        runAsNonRoot: true
      serviceAccountName: operator
      volumes:
      - emptyDir: {}
        name: tmp
